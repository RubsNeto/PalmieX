"""
Django settings for palmiex project.

Generated by 'django-admin startproject' using Django 5.1.4.
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&jb@@!1-($a0+kr*85u84+c#_mr+(uhj=cwac6lgybswb(hn%v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# palmiex/settings.py
# palmiex/settings.py

LOGIN_REDIRECT_URL = '/realiza_pedidos/'  # Redireciona para 'realiza_pedidos' após o login
LOGIN_URL = '/login/'  # Alinha com a rota definida no urls.py
LOGOUT_REDIRECT_URL = '/login/'  # Opcional: Redireciona para a página de login após o logout
AUTH_USER_MODEL = 'auth.User'




INSTALLED_APPS = [
    'autenticacao',
    'pedidos',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'palmiex.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Diretório global de templates. Ajuste o caminho se necessário.
        # Por exemplo, se você tiver "palmiex/templates", 
        # certifique-se que o diretório existe.
        'DIRS': [BASE_DIR / 'templates'],
        # Se não quiser que o Django procure templates dentro dos apps,
        # defina APP_DIRS=False. Caso queira manter esta funcionalidade,
        # deixe True.
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',  # Necessário para usar {{ request }} nos templates
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'palmiex.wsgi.application'

# Database
# Ajuste conforme seu banco de dados
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



# Internationalization
LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'

# Diretório global para arquivos estáticos (CSS, JS, etc.)
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Diretório onde os arquivos estáticos serão coletados em produção
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Configurações para mídia
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
